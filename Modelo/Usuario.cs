//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GenteFitApp.Modelo
{
    using System;
    using System.Collections.Generic;
    
    public partial class Usuario
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Usuario()
        {
            this.Cliente = new HashSet<Cliente>();
        }
    
        public int idUsuario { get; set; }
        public string nombre { get; set; }
        public string apellido { get; set; }
        public string email { get; set; }
        public string contraseña { get; set; }
        public string rol { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Cliente> Cliente { get; set; }

        public Usuario ObtenerUsuario(string idUsuario, string contraseña)
{
    Usuario usuario = null;
    string connectionString = @"Data Source=DESKTOP-1JIM32R\SQLEXPRESS;Initial Catalog=GenteFit;Integrated Security=True";

    using (SqlConnection connection = new SqlConnection(connectionString))
    {
        string query = "SELECT idUsuario, nombre, apellido, email, rol FROM Usuario WHERE email = @Email AND contraseña = @Contraseña";

        using (SqlCommand command = new SqlCommand(query, connection))
        {
            command.Parameters.AddWithValue("@Email", email);
            command.Parameters.AddWithValue("@Contraseña", contraseña);

            connection.Open();
            using (SqlDataReader reader = command.ExecuteReader())
            {
                if (reader.Read())
                {
                    usuario = new Usuario
                    {
                        idUsuario = (int)reader["idUsuario"],
                        nombre = reader["nombre"].ToString(),
                        apellido = reader["apellido"].ToString(),
                        email = reader["email"].ToString(),
                        contraseña = reader["contraseña"].ToString(),
                        rol = reader["rol"].ToString()
                    };
                }
            }
        }
    }

    return usuario;
}

        public static implicit operator Usuario(string v)
        {
            throw new NotImplementedException();
        }
    }
}
